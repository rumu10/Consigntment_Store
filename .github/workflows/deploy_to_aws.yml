name: Deploy to AWS

on:
  pull_request:
    branches:
      - main
    types: [closed]

  push:
    branches:
      - main # Triggers the workflow on push events to the main branch

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: contains(toJSON(github.event.commits.*.modified), 'backend/') # Checks if backend directory has changes
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14' # Use the node version that matches your development environment

    - name: Install backend dependencies
      run: npm install
      working-directory: ./backend

    - name: Deploy backend with Serverless
      run: npx serverless deploy
      working-directory: ./backend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # Add other required environment variables here

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend # Ensures frontend is deployed after backend
    if: contains(toJSON(github.event.commits.*.modified), 'frontend/') # Checks if frontend directory has changes
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14' # Use the node version that matches your development environment

    - name: Install frontend dependencies
      run: npm install
      working-directory: ./frontend

    - name: Build frontend project
      run: npm run build
      working-directory: ./frontend

    - name: Deploy frontend with Serverless
      run: npx serverless client deploy --no-confirm
      working-directory: ./frontend
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # Add other required environment variables here

